/*
Flight Offers Price

Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).

API version: 1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"github.com/yenvanio/amadeus-go/amadeus"
)

// checks if the BookingRequirements type satisfies the MappedNullable interface at compile time
var _ amadeus.MappedNullable = &BookingRequirements{}

// BookingRequirements pricing condition at booking level
type BookingRequirements struct {
	// If true, an invoice address is required for the creation of the flight-order
	InvoiceAddressRequired *bool `json:"invoiceAddressRequired,omitempty"`
	// If true, a postal address is required for the creation of the flight-order
	MailingAddressRequired *bool `json:"mailingAddressRequired,omitempty"`
	// If true, an email address is required for the creation of the flight-order
	EmailAddressRequired *bool `json:"emailAddressRequired,omitempty"`
	// If true, the phone country code (e.g. '33') associated for each phone number is required for the creation of the flight-order
	PhoneCountryCodeRequired *bool `json:"phoneCountryCodeRequired,omitempty"`
	// If true, a mobile phone number is required for the creation of the flight-order
	MobilePhoneNumberRequired *bool `json:"mobilePhoneNumberRequired,omitempty"`
	// If true, a phone number is required for the creation of the flight-order
	PhoneNumberRequired *bool `json:"phoneNumberRequired,omitempty"`
	// If true, a postal code is required for the creation of the flight-order
	PostalCodeRequired *bool `json:"postalCodeRequired,omitempty"`
	// traveler pricing condition
	TravelerRequirements []PassengerConditions `json:"travelerRequirements,omitempty"`
}

// NewBookingRequirements instantiates a new BookingRequirements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookingRequirements() *BookingRequirements {
	this := BookingRequirements{}
	return &this
}

// NewBookingRequirementsWithDefaults instantiates a new BookingRequirements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookingRequirementsWithDefaults() *BookingRequirements {
	this := BookingRequirements{}
	return &this
}

// GetInvoiceAddressRequired returns the InvoiceAddressRequired field value if set, zero value otherwise.
func (o *BookingRequirements) GetInvoiceAddressRequired() bool {
	if o == nil || amadeus.IsNil(o.InvoiceAddressRequired) {
		var ret bool
		return ret
	}
	return *o.InvoiceAddressRequired
}

// GetInvoiceAddressRequiredOk returns a tuple with the InvoiceAddressRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingRequirements) GetInvoiceAddressRequiredOk() (*bool, bool) {
	if o == nil || amadeus.IsNil(o.InvoiceAddressRequired) {
		return nil, false
	}
	return o.InvoiceAddressRequired, true
}

// HasInvoiceAddressRequired returns a boolean if a field has been set.
func (o *BookingRequirements) HasInvoiceAddressRequired() bool {
	if o != nil && !amadeus.IsNil(o.InvoiceAddressRequired) {
		return true
	}

	return false
}

// SetInvoiceAddressRequired gets a reference to the given bool and assigns it to the InvoiceAddressRequired field.
func (o *BookingRequirements) SetInvoiceAddressRequired(v bool) {
	o.InvoiceAddressRequired = &v
}

// GetMailingAddressRequired returns the MailingAddressRequired field value if set, zero value otherwise.
func (o *BookingRequirements) GetMailingAddressRequired() bool {
	if o == nil || amadeus.IsNil(o.MailingAddressRequired) {
		var ret bool
		return ret
	}
	return *o.MailingAddressRequired
}

// GetMailingAddressRequiredOk returns a tuple with the MailingAddressRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingRequirements) GetMailingAddressRequiredOk() (*bool, bool) {
	if o == nil || amadeus.IsNil(o.MailingAddressRequired) {
		return nil, false
	}
	return o.MailingAddressRequired, true
}

// HasMailingAddressRequired returns a boolean if a field has been set.
func (o *BookingRequirements) HasMailingAddressRequired() bool {
	if o != nil && !amadeus.IsNil(o.MailingAddressRequired) {
		return true
	}

	return false
}

// SetMailingAddressRequired gets a reference to the given bool and assigns it to the MailingAddressRequired field.
func (o *BookingRequirements) SetMailingAddressRequired(v bool) {
	o.MailingAddressRequired = &v
}

// GetEmailAddressRequired returns the EmailAddressRequired field value if set, zero value otherwise.
func (o *BookingRequirements) GetEmailAddressRequired() bool {
	if o == nil || amadeus.IsNil(o.EmailAddressRequired) {
		var ret bool
		return ret
	}
	return *o.EmailAddressRequired
}

// GetEmailAddressRequiredOk returns a tuple with the EmailAddressRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingRequirements) GetEmailAddressRequiredOk() (*bool, bool) {
	if o == nil || amadeus.IsNil(o.EmailAddressRequired) {
		return nil, false
	}
	return o.EmailAddressRequired, true
}

// HasEmailAddressRequired returns a boolean if a field has been set.
func (o *BookingRequirements) HasEmailAddressRequired() bool {
	if o != nil && !amadeus.IsNil(o.EmailAddressRequired) {
		return true
	}

	return false
}

// SetEmailAddressRequired gets a reference to the given bool and assigns it to the EmailAddressRequired field.
func (o *BookingRequirements) SetEmailAddressRequired(v bool) {
	o.EmailAddressRequired = &v
}

// GetPhoneCountryCodeRequired returns the PhoneCountryCodeRequired field value if set, zero value otherwise.
func (o *BookingRequirements) GetPhoneCountryCodeRequired() bool {
	if o == nil || amadeus.IsNil(o.PhoneCountryCodeRequired) {
		var ret bool
		return ret
	}
	return *o.PhoneCountryCodeRequired
}

// GetPhoneCountryCodeRequiredOk returns a tuple with the PhoneCountryCodeRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingRequirements) GetPhoneCountryCodeRequiredOk() (*bool, bool) {
	if o == nil || amadeus.IsNil(o.PhoneCountryCodeRequired) {
		return nil, false
	}
	return o.PhoneCountryCodeRequired, true
}

// HasPhoneCountryCodeRequired returns a boolean if a field has been set.
func (o *BookingRequirements) HasPhoneCountryCodeRequired() bool {
	if o != nil && !amadeus.IsNil(o.PhoneCountryCodeRequired) {
		return true
	}

	return false
}

// SetPhoneCountryCodeRequired gets a reference to the given bool and assigns it to the PhoneCountryCodeRequired field.
func (o *BookingRequirements) SetPhoneCountryCodeRequired(v bool) {
	o.PhoneCountryCodeRequired = &v
}

// GetMobilePhoneNumberRequired returns the MobilePhoneNumberRequired field value if set, zero value otherwise.
func (o *BookingRequirements) GetMobilePhoneNumberRequired() bool {
	if o == nil || amadeus.IsNil(o.MobilePhoneNumberRequired) {
		var ret bool
		return ret
	}
	return *o.MobilePhoneNumberRequired
}

// GetMobilePhoneNumberRequiredOk returns a tuple with the MobilePhoneNumberRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingRequirements) GetMobilePhoneNumberRequiredOk() (*bool, bool) {
	if o == nil || amadeus.IsNil(o.MobilePhoneNumberRequired) {
		return nil, false
	}
	return o.MobilePhoneNumberRequired, true
}

// HasMobilePhoneNumberRequired returns a boolean if a field has been set.
func (o *BookingRequirements) HasMobilePhoneNumberRequired() bool {
	if o != nil && !amadeus.IsNil(o.MobilePhoneNumberRequired) {
		return true
	}

	return false
}

// SetMobilePhoneNumberRequired gets a reference to the given bool and assigns it to the MobilePhoneNumberRequired field.
func (o *BookingRequirements) SetMobilePhoneNumberRequired(v bool) {
	o.MobilePhoneNumberRequired = &v
}

// GetPhoneNumberRequired returns the PhoneNumberRequired field value if set, zero value otherwise.
func (o *BookingRequirements) GetPhoneNumberRequired() bool {
	if o == nil || amadeus.IsNil(o.PhoneNumberRequired) {
		var ret bool
		return ret
	}
	return *o.PhoneNumberRequired
}

// GetPhoneNumberRequiredOk returns a tuple with the PhoneNumberRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingRequirements) GetPhoneNumberRequiredOk() (*bool, bool) {
	if o == nil || amadeus.IsNil(o.PhoneNumberRequired) {
		return nil, false
	}
	return o.PhoneNumberRequired, true
}

// HasPhoneNumberRequired returns a boolean if a field has been set.
func (o *BookingRequirements) HasPhoneNumberRequired() bool {
	if o != nil && !amadeus.IsNil(o.PhoneNumberRequired) {
		return true
	}

	return false
}

// SetPhoneNumberRequired gets a reference to the given bool and assigns it to the PhoneNumberRequired field.
func (o *BookingRequirements) SetPhoneNumberRequired(v bool) {
	o.PhoneNumberRequired = &v
}

// GetPostalCodeRequired returns the PostalCodeRequired field value if set, zero value otherwise.
func (o *BookingRequirements) GetPostalCodeRequired() bool {
	if o == nil || amadeus.IsNil(o.PostalCodeRequired) {
		var ret bool
		return ret
	}
	return *o.PostalCodeRequired
}

// GetPostalCodeRequiredOk returns a tuple with the PostalCodeRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingRequirements) GetPostalCodeRequiredOk() (*bool, bool) {
	if o == nil || amadeus.IsNil(o.PostalCodeRequired) {
		return nil, false
	}
	return o.PostalCodeRequired, true
}

// HasPostalCodeRequired returns a boolean if a field has been set.
func (o *BookingRequirements) HasPostalCodeRequired() bool {
	if o != nil && !amadeus.IsNil(o.PostalCodeRequired) {
		return true
	}

	return false
}

// SetPostalCodeRequired gets a reference to the given bool and assigns it to the PostalCodeRequired field.
func (o *BookingRequirements) SetPostalCodeRequired(v bool) {
	o.PostalCodeRequired = &v
}

// GetTravelerRequirements returns the TravelerRequirements field value if set, zero value otherwise.
func (o *BookingRequirements) GetTravelerRequirements() []PassengerConditions {
	if o == nil || amadeus.IsNil(o.TravelerRequirements) {
		var ret []PassengerConditions
		return ret
	}
	return o.TravelerRequirements
}

// GetTravelerRequirementsOk returns a tuple with the TravelerRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingRequirements) GetTravelerRequirementsOk() ([]PassengerConditions, bool) {
	if o == nil || amadeus.IsNil(o.TravelerRequirements) {
		return nil, false
	}
	return o.TravelerRequirements, true
}

// HasTravelerRequirements returns a boolean if a field has been set.
func (o *BookingRequirements) HasTravelerRequirements() bool {
	if o != nil && !amadeus.IsNil(o.TravelerRequirements) {
		return true
	}

	return false
}

// SetTravelerRequirements gets a reference to the given []PassengerConditions and assigns it to the TravelerRequirements field.
func (o *BookingRequirements) SetTravelerRequirements(v []PassengerConditions) {
	o.TravelerRequirements = v
}

func (o BookingRequirements) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookingRequirements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !amadeus.IsNil(o.InvoiceAddressRequired) {
		toSerialize["invoiceAddressRequired"] = o.InvoiceAddressRequired
	}
	if !amadeus.IsNil(o.MailingAddressRequired) {
		toSerialize["mailingAddressRequired"] = o.MailingAddressRequired
	}
	if !amadeus.IsNil(o.EmailAddressRequired) {
		toSerialize["emailAddressRequired"] = o.EmailAddressRequired
	}
	if !amadeus.IsNil(o.PhoneCountryCodeRequired) {
		toSerialize["phoneCountryCodeRequired"] = o.PhoneCountryCodeRequired
	}
	if !amadeus.IsNil(o.MobilePhoneNumberRequired) {
		toSerialize["mobilePhoneNumberRequired"] = o.MobilePhoneNumberRequired
	}
	if !amadeus.IsNil(o.PhoneNumberRequired) {
		toSerialize["phoneNumberRequired"] = o.PhoneNumberRequired
	}
	if !amadeus.IsNil(o.PostalCodeRequired) {
		toSerialize["postalCodeRequired"] = o.PostalCodeRequired
	}
	if !amadeus.IsNil(o.TravelerRequirements) {
		toSerialize["travelerRequirements"] = o.TravelerRequirements
	}
	return toSerialize, nil
}

type NullableBookingRequirements struct {
	value *BookingRequirements
	isSet bool
}

func (v NullableBookingRequirements) Get() *BookingRequirements {
	return v.value
}

func (v *NullableBookingRequirements) Set(val *BookingRequirements) {
	v.value = val
	v.isSet = true
}

func (v NullableBookingRequirements) IsSet() bool {
	return v.isSet
}

func (v *NullableBookingRequirements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookingRequirements(val *BookingRequirements) *NullableBookingRequirements {
	return &NullableBookingRequirements{value: val, isSet: true}
}

func (v NullableBookingRequirements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookingRequirements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


