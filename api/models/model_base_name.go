/*
Flight Offers Price

Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).

API version: 1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"github.com/GIT_USER_ID/GIT_REPO_ID/api"
)

// checks if the BaseName type satisfies the MappedNullable interface at compile time
var _ api.MappedNullable = &BaseName{}

// BaseName description of the name of a physical person
type BaseName struct {
	// First name.
	FirstName *string `json:"firstName,omitempty"`
	// Last name.
	LastName *string `json:"lastName,omitempty"`
	// Middle name(s), for example \"Lee\" in \"John Lee Smith\".
	MiddleName *string `json:"middleName,omitempty"`
}

// NewBaseName instantiates a new BaseName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseName() *BaseName {
	this := BaseName{}
	return &this
}

// NewBaseNameWithDefaults instantiates a new BaseName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseNameWithDefaults() *BaseName {
	this := BaseName{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *BaseName) GetFirstName() string {
	if o == nil || api.IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseName) GetFirstNameOk() (*string, bool) {
	if o == nil || api.IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *BaseName) HasFirstName() bool {
	if o != nil && !api.IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *BaseName) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *BaseName) GetLastName() string {
	if o == nil || api.IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseName) GetLastNameOk() (*string, bool) {
	if o == nil || api.IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *BaseName) HasLastName() bool {
	if o != nil && !api.IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *BaseName) SetLastName(v string) {
	o.LastName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *BaseName) GetMiddleName() string {
	if o == nil || api.IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseName) GetMiddleNameOk() (*string, bool) {
	if o == nil || api.IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *BaseName) HasMiddleName() bool {
	if o != nil && !api.IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *BaseName) SetMiddleName(v string) {
	o.MiddleName = &v
}

func (o BaseName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !api.IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !api.IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !api.IsNil(o.MiddleName) {
		toSerialize["middleName"] = o.MiddleName
	}
	return toSerialize, nil
}

type NullableBaseName struct {
	value *BaseName
	isSet bool
}

func (v NullableBaseName) Get() *BaseName {
	return v.value
}

func (v *NullableBaseName) Set(val *BaseName) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseName) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseName(val *BaseName) *NullableBaseName {
	return &NullableBaseName{value: val, isSet: true}
}

func (v NullableBaseName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


