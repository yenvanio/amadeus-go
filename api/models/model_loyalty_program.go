/*
Flight Offers Price

Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).

API version: 1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"github.com/GIT_USER_ID/GIT_REPO_ID/api"
)

// checks if the LoyaltyProgram type satisfies the MappedNullable interface at compile time
var _ api.MappedNullable = &LoyaltyProgram{}

// LoyaltyProgram loyalty program information
type LoyaltyProgram struct {
	// loyalty program airline code
	ProgramOwner *string `json:"programOwner,omitempty"`
	// loyalty program number
	Id *string `json:"id,omitempty"`
}

// NewLoyaltyProgram instantiates a new LoyaltyProgram object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoyaltyProgram() *LoyaltyProgram {
	this := LoyaltyProgram{}
	return &this
}

// NewLoyaltyProgramWithDefaults instantiates a new LoyaltyProgram object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoyaltyProgramWithDefaults() *LoyaltyProgram {
	this := LoyaltyProgram{}
	return &this
}

// GetProgramOwner returns the ProgramOwner field value if set, zero value otherwise.
func (o *LoyaltyProgram) GetProgramOwner() string {
	if o == nil || api.IsNil(o.ProgramOwner) {
		var ret string
		return ret
	}
	return *o.ProgramOwner
}

// GetProgramOwnerOk returns a tuple with the ProgramOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoyaltyProgram) GetProgramOwnerOk() (*string, bool) {
	if o == nil || api.IsNil(o.ProgramOwner) {
		return nil, false
	}
	return o.ProgramOwner, true
}

// HasProgramOwner returns a boolean if a field has been set.
func (o *LoyaltyProgram) HasProgramOwner() bool {
	if o != nil && !api.IsNil(o.ProgramOwner) {
		return true
	}

	return false
}

// SetProgramOwner gets a reference to the given string and assigns it to the ProgramOwner field.
func (o *LoyaltyProgram) SetProgramOwner(v string) {
	o.ProgramOwner = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LoyaltyProgram) GetId() string {
	if o == nil || api.IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoyaltyProgram) GetIdOk() (*string, bool) {
	if o == nil || api.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LoyaltyProgram) HasId() bool {
	if o != nil && !api.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LoyaltyProgram) SetId(v string) {
	o.Id = &v
}

func (o LoyaltyProgram) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoyaltyProgram) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !api.IsNil(o.ProgramOwner) {
		toSerialize["programOwner"] = o.ProgramOwner
	}
	if !api.IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableLoyaltyProgram struct {
	value *LoyaltyProgram
	isSet bool
}

func (v NullableLoyaltyProgram) Get() *LoyaltyProgram {
	return v.value
}

func (v *NullableLoyaltyProgram) Set(val *LoyaltyProgram) {
	v.value = val
	v.isSet = true
}

func (v NullableLoyaltyProgram) IsSet() bool {
	return v.isSet
}

func (v *NullableLoyaltyProgram) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoyaltyProgram(val *LoyaltyProgram) *NullableLoyaltyProgram {
	return &NullableLoyaltyProgram{value: val, isSet: true}
}

func (v NullableLoyaltyProgram) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoyaltyProgram) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


