/*
Flight Offers Price

Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).

API version: 1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"github.com/GIT_USER_ID/GIT_REPO_ID/api"
)

// checks if the Bags type satisfies the MappedNullable interface at compile time
var _ api.MappedNullable = &Bags{}

// Bags checked bag
type Bags struct {
	// Total number of units
	Quantity *int32 `json:"quantity,omitempty"`
	// Weight of the baggage allowance
	Weight *int32 `json:"weight,omitempty"`
	// Code to qualify unit as pounds or kilos
	WeightUnit *string `json:"weightUnit,omitempty"`
	// Type of service
	Name *string           `json:"name,omitempty"`
	Price *ElementaryPrice `json:"price,omitempty"`
	// Specify if the service is bookable by itinerary  or for all itineraries
	BookableByItinerary *bool `json:"bookableByItinerary,omitempty"`
	// Id of the segment concerned by the service
	SegmentIds []string `json:"segmentIds,omitempty"`
	// Id of the traveler concerned by the service
	TravelerIds []string `json:"travelerIds,omitempty"`
}

// NewBags instantiates a new Bags object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBags() *Bags {
	this := Bags{}
	return &this
}

// NewBagsWithDefaults instantiates a new Bags object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBagsWithDefaults() *Bags {
	this := Bags{}
	return &this
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *Bags) GetQuantity() int32 {
	if o == nil || api.IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bags) GetQuantityOk() (*int32, bool) {
	if o == nil || api.IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *Bags) HasQuantity() bool {
	if o != nil && !api.IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *Bags) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *Bags) GetWeight() int32 {
	if o == nil || api.IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bags) GetWeightOk() (*int32, bool) {
	if o == nil || api.IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *Bags) HasWeight() bool {
	if o != nil && !api.IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *Bags) SetWeight(v int32) {
	o.Weight = &v
}

// GetWeightUnit returns the WeightUnit field value if set, zero value otherwise.
func (o *Bags) GetWeightUnit() string {
	if o == nil || api.IsNil(o.WeightUnit) {
		var ret string
		return ret
	}
	return *o.WeightUnit
}

// GetWeightUnitOk returns a tuple with the WeightUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bags) GetWeightUnitOk() (*string, bool) {
	if o == nil || api.IsNil(o.WeightUnit) {
		return nil, false
	}
	return o.WeightUnit, true
}

// HasWeightUnit returns a boolean if a field has been set.
func (o *Bags) HasWeightUnit() bool {
	if o != nil && !api.IsNil(o.WeightUnit) {
		return true
	}

	return false
}

// SetWeightUnit gets a reference to the given string and assigns it to the WeightUnit field.
func (o *Bags) SetWeightUnit(v string) {
	o.WeightUnit = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Bags) GetName() string {
	if o == nil || api.IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bags) GetNameOk() (*string, bool) {
	if o == nil || api.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Bags) HasName() bool {
	if o != nil && !api.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Bags) SetName(v string) {
	o.Name = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *Bags) GetPrice() ElementaryPrice {
	if o == nil || api.IsNil(o.Price) {
		var ret ElementaryPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bags) GetPriceOk() (*ElementaryPrice, bool) {
	if o == nil || api.IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *Bags) HasPrice() bool {
	if o != nil && !api.IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given ElementaryPrice and assigns it to the Price field.
func (o *Bags) SetPrice(v ElementaryPrice) {
	o.Price = &v
}

// GetBookableByItinerary returns the BookableByItinerary field value if set, zero value otherwise.
func (o *Bags) GetBookableByItinerary() bool {
	if o == nil || api.IsNil(o.BookableByItinerary) {
		var ret bool
		return ret
	}
	return *o.BookableByItinerary
}

// GetBookableByItineraryOk returns a tuple with the BookableByItinerary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bags) GetBookableByItineraryOk() (*bool, bool) {
	if o == nil || api.IsNil(o.BookableByItinerary) {
		return nil, false
	}
	return o.BookableByItinerary, true
}

// HasBookableByItinerary returns a boolean if a field has been set.
func (o *Bags) HasBookableByItinerary() bool {
	if o != nil && !api.IsNil(o.BookableByItinerary) {
		return true
	}

	return false
}

// SetBookableByItinerary gets a reference to the given bool and assigns it to the BookableByItinerary field.
func (o *Bags) SetBookableByItinerary(v bool) {
	o.BookableByItinerary = &v
}

// GetSegmentIds returns the SegmentIds field value if set, zero value otherwise.
func (o *Bags) GetSegmentIds() []string {
	if o == nil || api.IsNil(o.SegmentIds) {
		var ret []string
		return ret
	}
	return o.SegmentIds
}

// GetSegmentIdsOk returns a tuple with the SegmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bags) GetSegmentIdsOk() ([]string, bool) {
	if o == nil || api.IsNil(o.SegmentIds) {
		return nil, false
	}
	return o.SegmentIds, true
}

// HasSegmentIds returns a boolean if a field has been set.
func (o *Bags) HasSegmentIds() bool {
	if o != nil && !api.IsNil(o.SegmentIds) {
		return true
	}

	return false
}

// SetSegmentIds gets a reference to the given []string and assigns it to the SegmentIds field.
func (o *Bags) SetSegmentIds(v []string) {
	o.SegmentIds = v
}

// GetTravelerIds returns the TravelerIds field value if set, zero value otherwise.
func (o *Bags) GetTravelerIds() []string {
	if o == nil || api.IsNil(o.TravelerIds) {
		var ret []string
		return ret
	}
	return o.TravelerIds
}

// GetTravelerIdsOk returns a tuple with the TravelerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Bags) GetTravelerIdsOk() ([]string, bool) {
	if o == nil || api.IsNil(o.TravelerIds) {
		return nil, false
	}
	return o.TravelerIds, true
}

// HasTravelerIds returns a boolean if a field has been set.
func (o *Bags) HasTravelerIds() bool {
	if o != nil && !api.IsNil(o.TravelerIds) {
		return true
	}

	return false
}

// SetTravelerIds gets a reference to the given []string and assigns it to the TravelerIds field.
func (o *Bags) SetTravelerIds(v []string) {
	o.TravelerIds = v
}

func (o Bags) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Bags) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !api.IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !api.IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !api.IsNil(o.WeightUnit) {
		toSerialize["weightUnit"] = o.WeightUnit
	}
	if !api.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !api.IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !api.IsNil(o.BookableByItinerary) {
		toSerialize["bookableByItinerary"] = o.BookableByItinerary
	}
	if !api.IsNil(o.SegmentIds) {
		toSerialize["segmentIds"] = o.SegmentIds
	}
	if !api.IsNil(o.TravelerIds) {
		toSerialize["travelerIds"] = o.TravelerIds
	}
	return toSerialize, nil
}

type NullableBags struct {
	value *Bags
	isSet bool
}

func (v NullableBags) Get() *Bags {
	return v.value
}

func (v *NullableBags) Set(val *Bags) {
	v.value = val
	v.isSet = true
}

func (v NullableBags) IsSet() bool {
	return v.isSet
}

func (v *NullableBags) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBags(val *Bags) *NullableBags {
	return &NullableBags{value: val, isSet: true}
}

func (v NullableBags) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBags) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


