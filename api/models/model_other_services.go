/*
Flight Offers Price

Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token.   Please also be aware that our test environment is based on a subset of the production, if you are not returning any results try with big cities/airports like LON (London) or NYC (New-York).

API version: 1.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"github.com/GIT_USER_ID/GIT_REPO_ID"
	"github.com/GIT_USER_ID/GIT_REPO_ID/api"
)

// checks if the OtherServices type satisfies the MappedNullable interface at compile time
var _ api.MappedNullable = &OtherServices{}

// OtherServices struct for OtherServices
type OtherServices struct {
	Name *openapi.ServiceName `json:"name,omitempty"`
	Price *ElementaryPrice    `json:"price,omitempty"`
	// Specify if the service is bookable by traveler or for all travelers
	BookableByTraveler *bool `json:"bookableByTraveler,omitempty"`
	// Specify if the service is bookable by itinerary or for all itineraries
	BookableByItinerary *bool `json:"bookableByItinerary,omitempty"`
	// Id of the segment concerned by the service
	SegmentIds []string `json:"segmentIds,omitempty"`
	// Id of the traveler concerned by the service
	TravelerIds []string `json:"travelerIds,omitempty"`
}

// NewOtherServices instantiates a new OtherServices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOtherServices() *OtherServices {
	this := OtherServices{}
	return &this
}

// NewOtherServicesWithDefaults instantiates a new OtherServices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOtherServicesWithDefaults() *OtherServices {
	this := OtherServices{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OtherServices) GetName() openapi.ServiceName {
	if o == nil || api.IsNil(o.Name) {
		var ret openapi.ServiceName
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtherServices) GetNameOk() (*openapi.ServiceName, bool) {
	if o == nil || api.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OtherServices) HasName() bool {
	if o != nil && !api.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given ServiceName and assigns it to the Name field.
func (o *OtherServices) SetName(v openapi.ServiceName) {
	o.Name = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *OtherServices) GetPrice() ElementaryPrice {
	if o == nil || api.IsNil(o.Price) {
		var ret ElementaryPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtherServices) GetPriceOk() (*ElementaryPrice, bool) {
	if o == nil || api.IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *OtherServices) HasPrice() bool {
	if o != nil && !api.IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given ElementaryPrice and assigns it to the Price field.
func (o *OtherServices) SetPrice(v ElementaryPrice) {
	o.Price = &v
}

// GetBookableByTraveler returns the BookableByTraveler field value if set, zero value otherwise.
func (o *OtherServices) GetBookableByTraveler() bool {
	if o == nil || api.IsNil(o.BookableByTraveler) {
		var ret bool
		return ret
	}
	return *o.BookableByTraveler
}

// GetBookableByTravelerOk returns a tuple with the BookableByTraveler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtherServices) GetBookableByTravelerOk() (*bool, bool) {
	if o == nil || api.IsNil(o.BookableByTraveler) {
		return nil, false
	}
	return o.BookableByTraveler, true
}

// HasBookableByTraveler returns a boolean if a field has been set.
func (o *OtherServices) HasBookableByTraveler() bool {
	if o != nil && !api.IsNil(o.BookableByTraveler) {
		return true
	}

	return false
}

// SetBookableByTraveler gets a reference to the given bool and assigns it to the BookableByTraveler field.
func (o *OtherServices) SetBookableByTraveler(v bool) {
	o.BookableByTraveler = &v
}

// GetBookableByItinerary returns the BookableByItinerary field value if set, zero value otherwise.
func (o *OtherServices) GetBookableByItinerary() bool {
	if o == nil || api.IsNil(o.BookableByItinerary) {
		var ret bool
		return ret
	}
	return *o.BookableByItinerary
}

// GetBookableByItineraryOk returns a tuple with the BookableByItinerary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtherServices) GetBookableByItineraryOk() (*bool, bool) {
	if o == nil || api.IsNil(o.BookableByItinerary) {
		return nil, false
	}
	return o.BookableByItinerary, true
}

// HasBookableByItinerary returns a boolean if a field has been set.
func (o *OtherServices) HasBookableByItinerary() bool {
	if o != nil && !api.IsNil(o.BookableByItinerary) {
		return true
	}

	return false
}

// SetBookableByItinerary gets a reference to the given bool and assigns it to the BookableByItinerary field.
func (o *OtherServices) SetBookableByItinerary(v bool) {
	o.BookableByItinerary = &v
}

// GetSegmentIds returns the SegmentIds field value if set, zero value otherwise.
func (o *OtherServices) GetSegmentIds() []string {
	if o == nil || api.IsNil(o.SegmentIds) {
		var ret []string
		return ret
	}
	return o.SegmentIds
}

// GetSegmentIdsOk returns a tuple with the SegmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtherServices) GetSegmentIdsOk() ([]string, bool) {
	if o == nil || api.IsNil(o.SegmentIds) {
		return nil, false
	}
	return o.SegmentIds, true
}

// HasSegmentIds returns a boolean if a field has been set.
func (o *OtherServices) HasSegmentIds() bool {
	if o != nil && !api.IsNil(o.SegmentIds) {
		return true
	}

	return false
}

// SetSegmentIds gets a reference to the given []string and assigns it to the SegmentIds field.
func (o *OtherServices) SetSegmentIds(v []string) {
	o.SegmentIds = v
}

// GetTravelerIds returns the TravelerIds field value if set, zero value otherwise.
func (o *OtherServices) GetTravelerIds() []string {
	if o == nil || api.IsNil(o.TravelerIds) {
		var ret []string
		return ret
	}
	return o.TravelerIds
}

// GetTravelerIdsOk returns a tuple with the TravelerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtherServices) GetTravelerIdsOk() ([]string, bool) {
	if o == nil || api.IsNil(o.TravelerIds) {
		return nil, false
	}
	return o.TravelerIds, true
}

// HasTravelerIds returns a boolean if a field has been set.
func (o *OtherServices) HasTravelerIds() bool {
	if o != nil && !api.IsNil(o.TravelerIds) {
		return true
	}

	return false
}

// SetTravelerIds gets a reference to the given []string and assigns it to the TravelerIds field.
func (o *OtherServices) SetTravelerIds(v []string) {
	o.TravelerIds = v
}

func (o OtherServices) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OtherServices) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !api.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !api.IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !api.IsNil(o.BookableByTraveler) {
		toSerialize["bookableByTraveler"] = o.BookableByTraveler
	}
	if !api.IsNil(o.BookableByItinerary) {
		toSerialize["bookableByItinerary"] = o.BookableByItinerary
	}
	if !api.IsNil(o.SegmentIds) {
		toSerialize["segmentIds"] = o.SegmentIds
	}
	if !api.IsNil(o.TravelerIds) {
		toSerialize["travelerIds"] = o.TravelerIds
	}
	return toSerialize, nil
}

type NullableOtherServices struct {
	value *OtherServices
	isSet bool
}

func (v NullableOtherServices) Get() *OtherServices {
	return v.value
}

func (v *NullableOtherServices) Set(val *OtherServices) {
	v.value = val
	v.isSet = true
}

func (v NullableOtherServices) IsSet() bool {
	return v.isSet
}

func (v *NullableOtherServices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOtherServices(val *OtherServices) *NullableOtherServices {
	return &NullableOtherServices{value: val, isSet: true}
}

func (v NullableOtherServices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOtherServices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


